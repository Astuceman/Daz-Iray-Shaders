// DAZ Studio version 4.9.4.117 filetype Light Preset

var g_sTOOL_NAME = "Light Preset";
var g_oFILE = new DzFile( getScriptFileName() );
var g_sSCRIPT_NAME = String( "%1.%2" ).arg( g_oFILE.baseName() ).arg( g_oFILE.extension() );
var g_bSHIFT_PRESSED = shiftPressed();
var g_bCONTROL_PRESSED = ctrlPressed();

var g_sREPLACE_ALL = "Replace All";
var g_sREPLACE_SELECTED = "Replace Selected";
var g_sADD = "Add";

var g_oGui = new DsInterface;
var g_oActions = new DsActions;
var g_oStringHelper = new DzStringHelper;
var g_oArrayHelper = new DzArrayHelper;
var g_oPresetHelper = new DzPresetHelper;
var g_oSettingsHelper = new DzSettingsHelper;
var g_oSceneHelper = new DzSceneHelper;

/***********************************************************************
***** DsInterface Prototype *****
***********************************************************************/

/*********************************************************************/
function DsInterface()
{
	this.m_nMARGIN = 5;
	this.m_nSPACING = 5;
	this.m_nMIN_BTN_WIDTH = 80;
	this.m_nMAX_BTN_HEIGHT = 20;
	this.m_nWIDGET_WIDTH = 190;
	this.m_aBoolNames = new Array;
	this.m_aBoolObjs = new Array;
	this.m_aStrNames = new Array;
	this.m_aStrObjs = new Array;
	this.m_aCmbNames = new Array;
	this.m_aCmbObjs = new Array;
	this.m_wDlg;
	this.m_wTabStack, this.m_wOptionPage, this.m_wPrefsPage;
	this.m_wCombGB, this.m_wPrefsGB;
	this.m_wActnLbl;
	this.m_wAction;
	this.m_wbLghtsGBox, this.m_wLghtsLstView;
	this.m_aItems = new Array;
	this.m_wHelpBtn, this.m_wAcceptBtn, this.m_wCancelBtn;
	this.m_wRdBtn, this.m_wRcrdBtn, this.m_wRcrdOnExec, this.m_wDfltBtn;

}
/***********************************************************************/
DsInterface.superclass = Object;

/*********************************************************************/
DsInterface.prototype.doCommon = function()
{
	this.m_wDlg = new DzDialog;
	this.m_wTabStack = new DzTabWidget( this.m_wDlg );
	this.m_wOptionPage = new DzVGroupBox( this.m_wTabStack );
	this.m_wCombGB = new DzVGroupBox( this.m_wOptionPage );
	this.m_wActnLbl = new DzLabel( this.m_wCombGB );
	this.m_wAction = new DzComboBox( this.m_wCombGB );
	this.m_wAction.insertItem( g_sREPLACE_ALL );
	this.m_wAction.insertItem( g_sREPLACE_SELECTED );
	this.m_wAction.insertItem( g_sADD );
	this.m_aCmbObjs.push( this.m_wAction );
	this.m_aCmbNames.push( "cbAction" );
	this.m_wbLghtsGBox = new DzVGroupBox( this.m_wOptionPage );
	this.m_wbLghtsGBox.checkable = true;
	this.m_wLghtsLstView = new DzListView( this.m_wbLghtsGBox );
	this.m_wPrefsPage = new DzVGroupBox( this.m_wTabStack );
	this.m_wPrefsGB = new DzVGroupBox( this.m_wPrefsPage );
	this.m_wRcrdOnExec = new DzCheckBox( this.m_wPrefsGB );
	this.m_aBoolObjs.push( this.m_wRcrdOnExec );
	this.m_aBoolNames.push( "rcrdOnExec" );
	this.setDefaults();
}

/*********************************************************************/
DsInterface.prototype.doDialog = function()
{
	this.doCommon();
	var oHelp = App.getHelpMgr();
	var oMgr = MainWindow.getActionMgr();
	var oAction = oMgr ? oMgr.findAction( "DzWhatsThisAction" ) : undefined;
	this.m_wDlg.caption = String( "%1 (%2)" ).arg( g_sTOOL_NAME ).arg( g_sSCRIPT_NAME );
	this.m_wDlg.whatsThis = String( "<b>File : </b> %1<br>" ).arg( g_sSCRIPT_NAME ) +
							String( "<b>Type : </b> %2<br>" ).arg( getScriptType() ) +
							String( "<b>Size : </b> %3<br>" ).arg( g_oFILE.sizeStr() ) +
							String( "<b>Version : </b> %4<br>" ).arg( getScriptVersionString() ) +
							String( "<b>Created : </b> %5<br>" ).arg( g_oFILE.created().toString( "dddd, MMMM d yyyy h:mm ap" ) ) +
							String( "<b>Modified : </b> %6" ).arg( g_oFILE.lastModified().toString( "dddd, MMMM d yyyy h:mm ap" ) );
	var wDlgLayout = new DzGridLayout( this.m_wDlg );
	wDlgLayout.margin = this.m_nMARGIN;
	wDlgLayout.spacing = this.m_nSPACING;
	wDlgLayout.addMultiCellWidget( this.m_wTabStack, 0, 0, 0, 2 );
	var wDlgBtnsGB = new DzGroupBox( this.m_wDlg );
	wDlgBtnsGB.flat = true;
	var wDlgBtnsLyt = new DzGridLayout( wDlgBtnsGB );
	wDlgBtnsLyt.margin = this.m_nMARGIN;
	wDlgBtnsLyt.spacing = this.m_nSPACING;
	this.m_wHelpBtn = new DzPushButton( wDlgBtnsGB );
	this.m_wHelpBtn.pixmap = new Pixmap( String( "%1/images/icons/whatsthissmallicon.png" ).arg( App.getResourcesPath() ) );
	this.m_wHelpBtn.maxHeight = this.m_nMAX_BTN_HEIGHT;
	if( oAction )
	{
		this.m_wHelpBtn.clicked.connect( oAction, "trigger()" );
	}
	this.m_wHelpBtn.toolTip = oHelp.getToolTip( "WhatsThis" );
	this.m_wHelpBtn.whatsThis = oHelp.getHelpString( "WhatsThis" );
	wDlgBtnsLyt.addWidget( this.m_wHelpBtn, 0, 0 );
	wDlgBtnsLyt.setColStretch( 1, 1 );
	this.m_wAcceptBtn = new DzPushButton( wDlgBtnsGB );
	this.m_wAcceptBtn.text = "&Accept";
	this.m_wAcceptBtn.minWidth = this.m_nMIN_BTN_WIDTH;
	this.m_wAcceptBtn.maxHeight = this.m_nMAX_BTN_HEIGHT;
	this.m_wDlg.setAcceptButton( this.m_wAcceptBtn );
	this.m_wAcceptBtn.toolTip = oHelp.getToolTip( "AcceptDialog" );
	this.m_wAcceptBtn.whatsThis = oHelp.getHelpString( "AcceptDialog" );
	wDlgBtnsLyt.addWidget( this.m_wAcceptBtn, 0, 2 );
	this.m_wCancelBtn = new DzPushButton( wDlgBtnsGB );
	this.m_wCancelBtn.text = "&Cancel";
	this.m_wCancelBtn.minWidth = this.m_nMIN_BTN_WIDTH;
	this.m_wCancelBtn.maxHeight = this.m_nMAX_BTN_HEIGHT;
	this.m_wDlg.setRejectButton( this.m_wCancelBtn );
	this.m_wCancelBtn.toolTip = oHelp.getToolTip( "CancelDialog" );
	this.m_wCancelBtn.whatsThis = oHelp.getHelpString( "CancelDialog" );
	wDlgBtnsLyt.addWidget( this.m_wCancelBtn, 0, 3 );
	wDlgLayout.addMultiCellWidget( wDlgBtnsGB, 1, 1, 0, 2 );
	this.m_wOptionPage.whatsThis = oHelp.getHelpString( "PresetOptionTab" );
	this.m_wOptionPage.flat = true;
	this.m_wOptionPage.insideMargin = this.m_nMARGIN;
	this.m_wOptionPage.insideSpacing = this.m_nSPACING;
	this.m_wCombGB.columns = 2;
	this.m_wActnLbl.text = "Action :";
	this.m_wActnLbl.alignment = this.m_wActnLbl.AlignRight;
	this.m_wActnLbl.whatsThis = oHelp.getHelpString( "PresetLightAction" );
	this.m_wAction.minWidth = this.m_nWIDGET_WIDTH;
	this.m_wAction.whatsThis = this.m_wActnLbl.whatsThis;
	this.m_wbLghtsGBox.title = "From List :";
	this.m_wbLghtsGBox.whatsThis = oHelp.getHelpString( "PresetLightList" );
	this.m_wLghtsLstView.addColumn( "Name" );
	this.m_wLghtsLstView.addColumn( "Type" );
	this.m_wLghtsLstView.sortColumn = 0;
	this.m_wLghtsLstView.allColumnsShowFocus = true;
	this.m_wLghtsLstView.resizeMode = this.m_wLghtsLstView.LastColumn;
	this.m_wLghtsLstView.selectionMode = this.m_wLghtsLstView.Extended;
	var aPresetLights = g_oActions.getPresetLights();
	var wLight;
	for( var i = 0; i < aPresetLights.length; i++ )
	{
		wLght = new DzCheckListItem( this.m_wLghtsLstView, DzCheckListItem.CheckBox, i );
		this.m_aItems.push( wLght );
		wLght.setText( 0, aPresetLights[ i ][ 0 ] );
		wLght.setText( 1, aPresetLights[ i ][ 1 ] );
		wLght.setRenameEnabled( 0, true );
	}
	this.m_wTabStack.addTab( this.m_wOptionPage, "Options" );
	this.m_wPrefsPage.whatsThis = oHelp.getHelpString( "PresetPrefTab" );
	this.m_wPrefsPage.flat = true;
	this.m_wPrefsPage.insideMargin = this.m_nMARGIN;
	this.m_wPrefsPage.insideSpacing = this.m_nSPACING;
	this.m_wPrefsGB.margin = this.m_nMARGIN;
	this.m_wPrefsGB.spacing = this.m_nSPACING;
	this.m_wRcrdOnExec.text = "Set Preferred Options on Accept";
	this.m_wRcrdOnExec.whatsThis = oHelp.getHelpString( "PresetPrefOnAccept" );
	this.m_wRcrdBtn = new DzPushButton( this.m_wPrefsGB );
	this.m_wRcrdBtn.text = "&Set Preferred Options";
	this.m_wRcrdBtn.whatsThis = oHelp.getHelpString( "PresetSetPref" );
	this.m_wRcrdBtn.pressed.connect( this, "setOptions" );
	this.m_wRdBtn = new DzPushButton( this.m_wPrefsGB );
	this.m_wRdBtn.text = "&Read Preferred Options";
	this.m_wRdBtn.whatsThis = oHelp.getHelpString( "PresetReadPref" );
	this.m_wRdBtn.pressed.connect( this, "getOptions" );
	this.m_wDfltBtn = new DzPushButton( this.m_wPrefsGB );
	this.m_wDfltBtn.text = "Restore &Default Options";
	this.m_wDfltBtn.whatsThis = oHelp.getHelpString( "PresetRestoreDef" );
	this.m_wDfltBtn.pressed.connect( this, "setDefaults" );
	var wNotesGB = new DzVGroupBox( this.m_wPrefsPage );
	wNotesGB.title = "Notes :";
	wNotesGB.margin = this.m_nMARGIN;
	wNotesGB.spacing = this.m_nSPACING;
	wNotesGB.minWidth = this.m_nWIDGET_WIDTH + 100;
	var wKeyLbl = new DzLabel( wNotesGB );
	wKeyLbl.text = oHelp.getHelpString( "PresetNotes" );
	this.m_wTabStack.addTab( this.m_wPrefsPage, "Preferences" );
	this.m_wDlg.maxWidth = this.m_wDlg.minWidth;
	this.m_wDlg.maxHeight = this.m_wDlg.minHeight;
	this.getOptions();
	if( this.m_wDlg.exec() )
	{
		if( this.m_wRcrdOnExec.checked )
		{
			this.setOptions();
		}
		g_oActions.begin();
	}
}

/*********************************************************************/
DsInterface.prototype.doNoDialog = function()
{
	this.doCommon();
	if( g_bSHIFT_PRESSED )
	{
		this.getOptions();
	}
	g_oActions.begin();
}

/*********************************************************************/
DsInterface.prototype.setDefaults = function()
{
	for( var i = 0; i < this.m_wAction.count; i++ )
	{
		if( this.m_wAction.text( i ) == g_sREPLACE_ALL )
		{
			this.m_wAction.currentItem = i;
			break;
		}
		this.m_wAction.currentItem = 0;
	}
	this.m_wbLghtsGBox.checked = false;
	this.m_wRcrdOnExec.checked = false;
}

/*********************************************************************/
DsInterface.prototype.getOptions = function()
{
	for( var i = 0; i < this.m_aBoolObjs.length; i++ )
	{
		this.m_aBoolObjs[ i ].checked = g_oSettingsHelper.get( g_oStringHelper.stripSpaces( g_sTOOL_NAME ), this.m_aBoolNames[ i ], this.m_aBoolObjs[ i ].checked );
	}
	for( var i = 0; i < this.m_aStrObjs.length; i++ )
	{
		this.m_aStrObjs[ i ].text = g_oSettingsHelper.get( g_oStringHelper.stripSpaces( g_sTOOL_NAME ), this.m_aStrNames[ i ], this.m_aStrObjs[ i ].text );
	}
	for( var i = 0; i < this.m_aCmbObjs.length; i++ )
	{
		var tStr = g_oSettingsHelper.get( g_oStringHelper.stripSpaces( g_sTOOL_NAME ), this.m_aCmbNames[ i ], this.m_aCmbObjs[ i ].currentText );
		for( var j = 0; j < this.m_aCmbObjs[ i ].count; j++ )
		{
			if( this.m_aCmbObjs[ i ].text( j ) == tStr )
			{
				this.m_aCmbObjs[ i ].currentItem = j;
				break;
			}
		}
	}
}

/*********************************************************************/
DsInterface.prototype.setOptions = function()
{
	for( var i = 0; i < this.m_aBoolObjs.length; i++ )
	{
		g_oSettingsHelper.set( g_oStringHelper.stripSpaces( g_sTOOL_NAME ), this.m_aBoolNames[ i ], this.m_aBoolObjs[ i ].checked );
	}
	for( var i = 0; i < this.m_aStrObjs.length; i++ )
	{
		g_oSettingsHelper.set( g_oStringHelper.stripSpaces( g_sTOOL_NAME ), this.m_aStrNames[ i ], this.m_aStrObjs[ i ].text );
	}
	for( var i = 0; i < this.m_aCmbObjs.length; i++ )
	{
		g_oSettingsHelper.set( g_oStringHelper.stripSpaces( g_sTOOL_NAME ), this.m_aCmbNames[ i ], this.m_aCmbObjs[ i ].currentText );
	}
}

/*********************************************************************/
DsInterface.prototype.getSelectedItems = function()
{
	var aItems = new Array;
	var aItem, oItem;
	for( var i = 0; i < this.m_aItems.length; i++ )
	{
		oItem = this.m_aItems[ i ];
		aItem = new Array;
		if( oItem.on )
		{
			aItem[ 0 ] = oItem.text( 0 );
			aItem[ 1 ] = oItem.text( 1 );
			aItems[ oItem.id ] = aItem;
		}
		else 
			{
				aItems[ oItem.id ] = undefined;
			}

	}
	return aItems;
}

/*********************************************************************/
DsInterface.prototype.getAction = function()
{
	return this.m_wAction.currentText;
}

/*********************************************************************/
DsInterface.prototype.lightsChecked = function()
{
	return this.m_wbLghtsGBox.checked;
}

/***********************************************************************
***** DsActions Prototype *****
***********************************************************************/

/*********************************************************************/
function DsActions()
{
	this.m_nSTART_TIME = Scene.getTime();
	this.m_aLights = new Array;
	this.m_oElement;
	this.m_aMissingClasses = new Array;
	this.m_sDefinitionFile;
	this.m_nType;
	this.m_bAskImage = true;
	this.m_aImagePaths = new Array;

}
/***********************************************************************/
DsActions.superclass = Object;

/*********************************************************************/
DsActions.prototype.getPresetLights = function()
{
	return this.m_aNewLights;
}

/*********************************************************************/
DsActions.prototype.buildLight = function( nLight )
{
	var aLight = this.m_aNewLights[ nLight ];
	if( aLight == undefined )
	{
		return false;
	}
	switch( nLight )
	{
			case 0:
			{
				try{
					this.m_oElement = new DzPointLight;
					var oLightSettings = new DzSettings;
					oLightSettings.setStringValue( "AttributesMode", "Scripting" );
					var oCheckLight = this.m_oElement.setAttributes( oLightSettings );
					delete oLightSettings;
					if( oCheckLight!= this.m_oElement ){
						delete this.m_oElement;
						this.m_oElement = oCheckLight;
					}
				}catch( e ){ debug( e ); }
			}
			break;

			case 1:
			{
				try{
					this.m_oElement = new DzPointLight;
					var oLightSettings = new DzSettings;
					oLightSettings.setStringValue( "AttributesMode", "Scripting" );
					var oCheckLight = this.m_oElement.setAttributes( oLightSettings );
					delete oLightSettings;
					if( oCheckLight!= this.m_oElement ){
						delete this.m_oElement;
						this.m_oElement = oCheckLight;
					}
				}catch( e ){ debug( e ); }
			}
			break;

			case 2:
			{
				try{
					this.m_oElement = new DzPointLight;
					var oLightSettings = new DzSettings;
					oLightSettings.setStringValue( "AttributesMode", "Scripting" );
					var oCheckLight = this.m_oElement.setAttributes( oLightSettings );
					delete oLightSettings;
					if( oCheckLight!= this.m_oElement ){
						delete this.m_oElement;
						this.m_oElement = oCheckLight;
					}
				}catch( e ){ debug( e ); }
			}
			break;
	}
	if( this.m_oElement == undefined )
	{
		return false;
	}
	g_oSceneHelper.setUniqueName( this.m_oElement, aLight[ 0 ] );
	Scene.addNode( this.m_oElement );
	return true;
}

/*********************************************************************/
DsActions.prototype.collectLights = function( bSelectedOnly )
{
	var aLights = new Array;
	var nLights = bSelectedOnly ? Scene.getNumSelectedLights() : Scene.getNumLights();
	for( var l = 0; l < nLights; l++ )
	{
		var oLight = bSelectedOnly ? Scene.getSelectedLight( l ) : Scene.getLight( l );
		aLights = g_oArrayHelper.addToArray( aLights, oLight );
	}
	return aLights;
}

/*********************************************************************/
DsActions.prototype.begin = function()
{
	var bSelectedOnly = false;
	if( g_oGui.getAction() == g_sREPLACE_SELECTED )
	{
		bSelectedOnly = true;
	}
	if( g_oGui.getAction() != g_sADD )
	{
		this.m_aLights = this.collectLights( bSelectedOnly );
	}
	if( g_oGui.lightsChecked() )
	{
		m_aNewLights = g_oGui.getSelectedItems();
	}
	setBusyCursor();
	beginUndo();
	for( var l = 0; l < this.m_aLights.length; l++ ){
		Scene.removeNode( this.m_aLights[ l ] );
	}
	for( var l = 0; l < this.m_aNewLights.length; l++ ){
		this.createLight( l );
	}
	acceptUndo( String( "\"%1\"" ).arg( g_sSCRIPT_NAME ) );
	clearBusyCursor();
}

/*********************************************************************/
DsActions.prototype.m_aNewLights = [
	[ "PointLight 1", "DzPointLight" ],
	[ "PointLight 2", "DzPointLight" ],
	[ "PointLight 3", "DzPointLight" ]
	];

/*********************************************************************/
DsActions.prototype.createLight = function( nLight ){
	switch( nLight ){
		case 0:
			if( this.buildLight( nLight ) ){
				g_oPresetHelper.setTargetElement( this.m_oElement );
				g_oPresetHelper.setTransformProperty( "XTranslate",  [ 0 ] );
				g_oPresetHelper.setTransformProperty( "YTranslate",  [ 123.793 ] );
				g_oPresetHelper.setTransformProperty( "ZTranslate",  [ -56.0777 ] );
				g_oPresetHelper.setTransformProperty( "XRotate",  [ 0 ] );
				g_oPresetHelper.setTransformProperty( "YRotate",  [ 0 ] );
				g_oPresetHelper.setTransformProperty( "ZRotate",  [ 0 ] );
				g_oPresetHelper.setTransformProperty( "Scale",  [ 1 ] );
				g_oPresetHelper.setTransformProperty( "XScale",  [ 1 ] );
				g_oPresetHelper.setTransformProperty( "YScale",  [ 5.74189 ] );
				g_oPresetHelper.setTransformProperty( "ZScale",  [ 1 ] );
				g_oPresetHelper.setNumericProperty( "Point At",  [ 1 ] );
				g_oPresetHelper.setNumericProperty( "Disable Transform",  [ 0 ] );
				g_oPresetHelper.setNumericProperty( "Renderable",  [ 1 ] );
				g_oPresetHelper.setNumericProperty( "Cast Shadows",  [ 1 ] );
				g_oPresetHelper.setNumericProperty( "Render Priority",  [ "Normal" ] );
				g_oPresetHelper.setNumericProperty( "Visible in Simulation",  [ 1 ] );
				g_oPresetHelper.setNumericProperty( "Visible",  [ 1 ] );
				g_oPresetHelper.setNumericProperty( "Selectable",  [ 1 ] );
				g_oPresetHelper.setPropertyWithString( "Categories", "" );
				g_oPresetHelper.setNumericProperty( "Shadow Type",  [ "None" ] );
				g_oPresetHelper.setNumericProperty( "Illumination",  [ "On" ] );
				g_oPresetHelper.setColorProperty( "Color",  [ 255, 255, 255 ] );
				g_oPresetHelper.setNumericPropertyWithAttributes( "Intensity", true, 0, 2, [ 1 ] );
				g_oPresetHelper.setNumericProperty( "Intensity Scale",  [ 1000 ] );
				g_oPresetHelper.setNumericProperty( "Photometric Mode",  [ 1 ] );
				g_oPresetHelper.setNumericProperty( "Light Geometry",  [ "Point" ] );
				g_oPresetHelper.setNumericProperty( "Height",  [ 10 ] );
				g_oPresetHelper.setNumericProperty( "Width",  [ 10 ] );
				g_oPresetHelper.setNumericProperty( "Light Portal",  [ 0 ] );
				g_oPresetHelper.setNumericProperty( "Two Sided",  [ 0 ] );
				g_oPresetHelper.setNumericProperty( "Render Emitter",  [ 1 ] );
				g_oPresetHelper.setNumericProperty( "Flux",  [ 1500 ] );
				g_oPresetHelper.setNumericPropertyWithAttributes( "Temperature", true, 0, 10000, [ 6500 ] );
				g_oPresetHelper.setColorProperty( "Shadow Color",  [ 0, 0, 0 ] );
				g_oPresetHelper.setNumericPropertyWithAttributes( "Shadow Intensity", true, 0, 1, [ 1 ] );
				g_oPresetHelper.setNumericPropertyWithAttributes( "Shadow Softness", true, 0, 1, [ 0 ] );
				g_oPresetHelper.setNumericPropertyWithAttributes( "Shadow Bias", true, 0.01, 20, [ 1 ] );
				g_oPresetHelper.setNumericPropertyWithAttributes( "Decay", true, 0, 2, [ 2 ] );
				g_oPresetHelper.setPropertyWithString( "Light Profile", "" );
				g_oPresetHelper.setNumericProperty( "Display Persistence",  [ 0 ] );
				g_oPresetHelper.setNumericPropertyWithAttributes( "Opacity", true, 0, 1, [ 0.15 ] );
			}
			break;
		case 1:
			if( this.buildLight( nLight ) ){
				g_oPresetHelper.setTargetElement( this.m_oElement );
				g_oPresetHelper.setTransformProperty( "XTranslate",  [ 95.6393 ] );
				g_oPresetHelper.setTransformProperty( "YTranslate",  [ 112.347 ] );
				g_oPresetHelper.setTransformProperty( "ZTranslate",  [ 0 ] );
				g_oPresetHelper.setTransformProperty( "XRotate",  [ 0 ] );
				g_oPresetHelper.setTransformProperty( "YRotate",  [ -79.5387 ] );
				g_oPresetHelper.setTransformProperty( "ZRotate",  [ 0 ] );
				g_oPresetHelper.setTransformProperty( "Scale",  [ 1 ] );
				g_oPresetHelper.setTransformProperty( "XScale",  [ 1 ] );
				g_oPresetHelper.setTransformProperty( "YScale",  [ 1 ] );
				g_oPresetHelper.setTransformProperty( "ZScale",  [ 1 ] );
				g_oPresetHelper.setNumericProperty( "Point At",  [ 1 ] );
				g_oPresetHelper.setNumericProperty( "Disable Transform",  [ 0 ] );
				g_oPresetHelper.setNumericProperty( "Renderable",  [ 1 ] );
				g_oPresetHelper.setNumericProperty( "Cast Shadows",  [ 1 ] );
				g_oPresetHelper.setNumericProperty( "Render Priority",  [ "Normal" ] );
				g_oPresetHelper.setNumericProperty( "Visible in Simulation",  [ 1 ] );
				g_oPresetHelper.setNumericProperty( "Visible",  [ 1 ] );
				g_oPresetHelper.setNumericProperty( "Selectable",  [ 1 ] );
				g_oPresetHelper.setPropertyWithString( "Categories", "" );
				g_oPresetHelper.setNumericProperty( "Shadow Type",  [ "None" ] );
				g_oPresetHelper.setNumericProperty( "Illumination",  [ "On" ] );
				g_oPresetHelper.setColorProperty( "Color",  [ 219, 255, 253 ] );
				g_oPresetHelper.setNumericPropertyWithAttributes( "Intensity", true, 0, 2, [ 1 ] );
				g_oPresetHelper.setNumericProperty( "Intensity Scale",  [ 1000 ] );
				g_oPresetHelper.setNumericProperty( "Photometric Mode",  [ 1 ] );
				g_oPresetHelper.setNumericProperty( "Light Geometry",  [ "Rectangle" ] );
				g_oPresetHelper.setNumericProperty( "Height",  [ 100 ] );
				g_oPresetHelper.setNumericProperty( "Width",  [ 100 ] );
				g_oPresetHelper.setNumericProperty( "Light Portal",  [ 0 ] );
				g_oPresetHelper.setNumericProperty( "Two Sided",  [ 1 ] );
				g_oPresetHelper.setNumericProperty( "Render Emitter",  [ 1 ] );
				g_oPresetHelper.setNumericProperty( "Flux",  [ 100000 ] );
				g_oPresetHelper.setNumericPropertyWithAttributes( "Temperature", true, 0, 10000, [ 6500 ] );
				g_oPresetHelper.setColorProperty( "Shadow Color",  [ 0, 0, 0 ] );
				g_oPresetHelper.setNumericPropertyWithAttributes( "Shadow Intensity", true, 0, 1, [ 1 ] );
				g_oPresetHelper.setNumericPropertyWithAttributes( "Shadow Softness", true, 0, 1, [ 0 ] );
				g_oPresetHelper.setNumericPropertyWithAttributes( "Shadow Bias", true, 0.01, 20, [ 1 ] );
				g_oPresetHelper.setNumericPropertyWithAttributes( "Decay", true, 0, 2, [ 2 ] );
				g_oPresetHelper.setPropertyWithString( "Light Profile", "" );
				g_oPresetHelper.setNumericProperty( "Display Persistence",  [ 0 ] );
				g_oPresetHelper.setNumericPropertyWithAttributes( "Opacity", true, 0, 1, [ 0.15 ] );
			}
			break;
		case 2:
			if( this.buildLight( nLight ) ){
				g_oPresetHelper.setTargetElement( this.m_oElement );
				g_oPresetHelper.setTransformProperty( "XTranslate",  [ -112.58 ] );
				g_oPresetHelper.setTransformProperty( "YTranslate",  [ 55.9895 ] );
				g_oPresetHelper.setTransformProperty( "ZTranslate",  [ 34.9488 ] );
				g_oPresetHelper.setTransformProperty( "XRotate",  [ 0 ] );
				g_oPresetHelper.setTransformProperty( "YRotate",  [ -67.2878 ] );
				g_oPresetHelper.setTransformProperty( "ZRotate",  [ 0 ] );
				g_oPresetHelper.setTransformProperty( "Scale",  [ 1 ] );
				g_oPresetHelper.setTransformProperty( "XScale",  [ 1 ] );
				g_oPresetHelper.setTransformProperty( "YScale",  [ 1 ] );
				g_oPresetHelper.setTransformProperty( "ZScale",  [ 1 ] );
				g_oPresetHelper.setNumericProperty( "Point At",  [ 1 ] );
				g_oPresetHelper.setNumericProperty( "Disable Transform",  [ 0 ] );
				g_oPresetHelper.setNumericProperty( "Renderable",  [ 1 ] );
				g_oPresetHelper.setNumericProperty( "Cast Shadows",  [ 1 ] );
				g_oPresetHelper.setNumericProperty( "Render Priority",  [ "Normal" ] );
				g_oPresetHelper.setNumericProperty( "Visible in Simulation",  [ 1 ] );
				g_oPresetHelper.setNumericProperty( "Visible",  [ 1 ] );
				g_oPresetHelper.setNumericProperty( "Selectable",  [ 1 ] );
				g_oPresetHelper.setPropertyWithString( "Categories", "" );
				g_oPresetHelper.setNumericProperty( "Shadow Type",  [ "None" ] );
				g_oPresetHelper.setNumericProperty( "Illumination",  [ "On" ] );
				g_oPresetHelper.setColorProperty( "Color",  [ 255, 251, 190 ] );
				g_oPresetHelper.setNumericPropertyWithAttributes( "Intensity", true, 0, 2, [ 1 ] );
				g_oPresetHelper.setNumericProperty( "Intensity Scale",  [ 1000 ] );
				g_oPresetHelper.setNumericProperty( "Photometric Mode",  [ 1 ] );
				g_oPresetHelper.setNumericProperty( "Light Geometry",  [ "Disc" ] );
				g_oPresetHelper.setNumericProperty( "Height",  [ 100 ] );
				g_oPresetHelper.setNumericProperty( "Width",  [ 100 ] );
				g_oPresetHelper.setNumericProperty( "Light Portal",  [ 0 ] );
				g_oPresetHelper.setNumericProperty( "Two Sided",  [ 1 ] );
				g_oPresetHelper.setNumericProperty( "Render Emitter",  [ 1 ] );
				g_oPresetHelper.setNumericProperty( "Flux",  [ 1e+06 ] );
				g_oPresetHelper.setNumericPropertyWithAttributes( "Temperature", true, 0, 10000, [ 6500 ] );
				g_oPresetHelper.setColorProperty( "Shadow Color",  [ 0, 0, 0 ] );
				g_oPresetHelper.setNumericPropertyWithAttributes( "Shadow Intensity", true, 0, 1, [ 1 ] );
				g_oPresetHelper.setNumericPropertyWithAttributes( "Shadow Softness", true, 0, 1, [ 0 ] );
				g_oPresetHelper.setNumericPropertyWithAttributes( "Shadow Bias", true, 0.01, 20, [ 1 ] );
				g_oPresetHelper.setNumericPropertyWithAttributes( "Decay", true, 0, 2, [ 2 ] );
				g_oPresetHelper.setPropertyWithString( "Light Profile", "" );
				g_oPresetHelper.setNumericProperty( "Display Persistence",  [ 0 ] );
				g_oPresetHelper.setNumericPropertyWithAttributes( "Opacity", true, 0, 1, [ 0.15 ] );
			}
			break;
		default:
			break;
	}
}

g_bCONTROL_PRESSED ? g_oGui.doDialog() : g_oGui.doNoDialog();